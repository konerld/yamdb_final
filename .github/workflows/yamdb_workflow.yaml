name: yamdb-final-workflow

on: [push]

jobs:
#  tests:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.8
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest
#        pip install -r requirements.txt
#
#    - name: Lint with flake8
#      run: flake8 .
#
#
#  build_and_push_to_docker_hub:
#    name: Push Docker image to Docker Hub
#    runs-on: ubuntu-latest
#    needs: tests
#    steps:
#      - name: Check out the repo
#        uses: actions/checkout@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Login to Docker
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: konerld/yamdb:latest

  deploy:
      runs-on: ubuntu-latest
#      needs: build_and_push_to_docker_hub
      if:
        contains('
          refs/heads/master
          refs/heads/main
        ', github.ref)
      steps:
        - uses: actions/checkout@master
        - name: Copy docker-compose file and config to server
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            source: "docker-compose.yaml, nginx.conf"
            target: "~/yamdb_final/"

#        - name: executing remote ssh commands to deploy
#          uses: appleboy/ssh-action@master
#          with:
#            host: ${{ secrets.HOST }}
#            username: ${{ secrets.USER }}
#            key: ${{ secrets.SSH_KEY }}
#            script: |
#              docker pull konerld/yamdb
#              dockergi-compose -f ~/yamdb_final/docker-compose.yaml stop
#              docker-compose -f ~/yamdb_final/docker-compose.yaml rm -f
#              rm ~/yamdb_final/.env
#              echo "DB_ENGINE=django.db.backends.postgresql" >> ~/yamdb_final/.env
#              echo "DB_NAME=${{ secrets.PG_DB_NAME }}" >> ~/yamdb_final/.env
#              echo "POSTGRES_USER=${{ secrets.PG_USER }}" >> ~/yamdb_final/.env
#              echo "POSTGRES_PASSWORD=${{ secrets.PG_PASSWD }}" >> ~/yamdb_final/.env
#              echo "DB_HOST=db" >> ~/yamdb_final/.env
#              echo "DB_PORT=5432" >> .env
#              docker-compose -f ~/yamdb_final/docker-compose.yaml up -d


#  send_message_after_deploy:
#    runs-on: ubuntu-latest
#    needs: deploy
#    steps:
#      - name: send message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: Деплой ${{ github.workflow }} успешно выполнен!
#
#  send_message_without_deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push_to_docker_hub
#    steps:
#      - name: send message
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message: Тесты и билд ${{ github.workflow }} успешно выполнен!